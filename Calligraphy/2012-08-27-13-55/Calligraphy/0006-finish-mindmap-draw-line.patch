From 755af9a94e87a207b244498dae08edc5a1f9f075 Mon Sep 17 00:00:00 2001
From: YuJinyang <Yujy@jinke.com.cn>
Date: Thu, 16 Aug 2012 16:35:53 +0800
Subject: [PATCH 6/9] finish mindmap draw line

---
 .../app/branch/EditableCalligraphy.java            |   67 ++++++++------------
 src/com/jinke/mindmap/LocateDot.java               |   14 ++++
 src/com/jinke/mindmap/MindMapItem.java             |   18 +++++-
 3 files changed, 56 insertions(+), 43 deletions(-)
 create mode 100644 src/com/jinke/mindmap/LocateDot.java

diff --git a/src/com/jinke/calligraphy/app/branch/EditableCalligraphy.java b/src/com/jinke/calligraphy/app/branch/EditableCalligraphy.java
index 998ceed..d057c95 100644
--- a/src/com/jinke/calligraphy/app/branch/EditableCalligraphy.java
+++ b/src/com/jinke/calligraphy/app/branch/EditableCalligraphy.java
@@ -37,6 +37,7 @@ import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Matrix;
 import android.graphics.Paint;
+import android.graphics.Paint.Style;
 import android.graphics.Path;
 import android.graphics.Rect;
 import android.media.MediaPlayer;
@@ -1115,33 +1116,7 @@ public class EditableCalligraphy implements Command{
 				drawMapBegin = true;
 				mindMapBeginY = y;
 				MindMapItem mapItem = e.getMindMapItem();
-				
-				
 				updateMindMap(mapItem, p,x);
-//				y = mindMapBeginY +  mapItem.getMarginTop()*available.getAlinespace();
-//				LogUtil.getInstance().v("mindmap", "mindmap getMarginTop:" + mapItem.getMarginTop());
-//				int l;
-//				for(l=0;l<mapItem.getCharList().size();l++){
-//					e = mapItem.getCharList().get(l);
-//					float mappad = (CursorDrawBitmap.mIntervalHeight  - e.getHeight()/tt)  /1.2f;
-//					Matrix mm = new Matrix();
-//					if(flip_dst < BaseBitmap.TITLE_HEIGHT){
-//						mm.postTranslate(x,y+mappad);//test -70
-//					}else{
-//						int t = y+ (int)mappad - flip_dst + BaseBitmap.TITLE_HEIGHT;
-//						mm.postTranslate(x,t);//test -70
-//					}
-//					tmp = e.getCharBitmap();
-//					c.drawBitmap(tmp, mm, p);
-//					mm.postTranslate(0, tmp.getHeight());
-//					c.drawBitmap(Start.BUTTOM_LINE_BITMAP, mm, p);
-//					
-//					e.setCurPos(x, y);
-//					x += e.getWidth() + HMargin;
-//				}
-//				i += l;
-				
-				
 			}else{
 			
 				 if(e.type != EditableCalligraphyItem.Types.Space && e.type != EditableCalligraphyItem.Types.EnSpace){
@@ -1243,6 +1218,7 @@ public class EditableCalligraphy implements Command{
 				}
 	//			x += e.getWidth()  + HMargin;
 			}
+			
 		}//end for
 		if(flip){
 			startRecycleInVisiableBitmap();
@@ -1267,12 +1243,15 @@ public class EditableCalligraphy implements Command{
 		}else{
 			y = mapItem.getbrotherButtom() +  mapItem.getMarginTop()*available.getAlinespace();
 		}
-		
 		LogUtil.getInstance().v("mindmap", "mindmap getMarginTop:" + mapItem.getMarginTop());
 		x = preX;
 		maxX = x;
 		int l;
 		EditableCalligraphyItem e = null;
+		//minditem类中添加LocatDot类记录每个节点的画线的出发点和接>    入点
+		//行距available.getAlinespace()
+		//在画该节点的第一个字之前记录这个节点画线的接入点//
+		mapItem.indot.setLocateDot(x, y+available.getAlinespace()/2);
 		for(l=0;l<mapItem.getCharList().size();l++){
 			e = mapItem.getCharList().get(l);
 			float mappad = (CursorDrawBitmap.mIntervalHeight  - e.getHeight())  /1.2f;
@@ -1294,27 +1273,35 @@ public class EditableCalligraphy implements Command{
 			if(x>maxX)
 				maxX = x;
 		}
-		y += available.getAlinespace();
-		mapItem.setButtom(y);
+		//画完了这个节点的时候记录这个节点画线的出发点
+		mapItem.outdot.setLocateDot(x, y+available.getAlinespace()/2);
+		
+		mapItem.setButtom(y+available.getAlinespace());
 		
 		if(mapItem.getChildList() != null && mapItem.getChildList().size()!= 0){
 			MindMapItem tempItem = null;
 			preX = maxX + 100;
 			for(int j=0;j<mapItem.getChildList().size();j++){
 				tempItem = mapItem.getChildList().get(j);
-//				if(j==0){
-//					updateMindMap(tempItem, p,preX,mindMapBeginY);
-//				}
-//				else
-					updateMindMap(tempItem, p,preX);
-				
-//				if(j == mapItem.getChildList().size()-1){					
-//				}else{
-					
-//				}
-				
-			}
-		}
+				y += available.getAlinespace();//有问题
+				updateMindMap(tempItem, p,preX);
+			}
+		}
+		//在计算了这个节点的所有子节点的出发点和接入点后画线（仅对本节点的一级节点）
+			 Paint mp = new Paint();
+			 mp.setColor(Color.RED);
+			 mp.setStyle(Style.STROKE);
+			 mp.setStrokeWidth(4);
+			 if(mapItem.getChildList() != null && mapItem.getChildList().size()!= 0){
+			 for(int j=0;j<mapItem.getChildList().size();j++){
+			   c.drawLine(
+					   mapItem.outdot.x, 
+			   			mapItem.outdot.y, 
+			   			mapItem.getChildList().get(j).indot.x, 
+			   			mapItem.getChildList().get(j).indot.y,
+			   			mp);
+			 }
+		 }
 		return;
 	}
 	
diff --git a/src/com/jinke/mindmap/LocateDot.java b/src/com/jinke/mindmap/LocateDot.java
new file mode 100644
index 0000000..582a1af
--- /dev/null
+++ b/src/com/jinke/mindmap/LocateDot.java
@@ -0,0 +1,14 @@
+package com.jinke.mindmap;
+
+public class LocateDot{
+	public float x;
+	public float y;
+	public LocateDot(){
+		x=-1;
+		y=-1;
+	}
+	public void setLocateDot(int xx,int yy){
+		this.x=xx;
+		this.y=yy;
+	}
+}
\ No newline at end of file
diff --git a/src/com/jinke/mindmap/MindMapItem.java b/src/com/jinke/mindmap/MindMapItem.java
index afc92ec..112fd3e 100644
--- a/src/com/jinke/mindmap/MindMapItem.java
+++ b/src/com/jinke/mindmap/MindMapItem.java
@@ -13,15 +13,24 @@ public class MindMapItem {
 	private int level;
 	private int buttom = -1;
 	private int id;
+	
+    public LocateDot indot;
+	public LocateDot outdot;
+
+	
 	public MindMapItem(){
 		parent = null;
 		level = 0;
 		charList = new ArrayList<EditableCalligraphyItem>();
+		indot = new LocateDot();
+		outdot = new LocateDot();
 	}
 	public MindMapItem(MindMapItem parent){
 		this.parent = parent;
 		this.level = parent.getLevel() + 1;
 		charList = new ArrayList<EditableCalligraphyItem>();
+		indot = new LocateDot();
+		outdot = new LocateDot();
 	}
 	public int getLevel(){
 		return this.level;
@@ -90,7 +99,7 @@ public class MindMapItem {
 	}
 	/**
 	 * 该节点所有子孙的数量
-	 * @return
+	 * @return 存在子节点，返回所有子节点的posterityCount()之和； 没有子节点，返回1；
 	 */
 	public int posterityCount(){
 		int count = 0;
@@ -98,10 +107,13 @@ public class MindMapItem {
 			MindMapItem temp = null;
 			for(int i=0;i<childList.size();i++){
 				temp = childList.get(i);
-				count ++;
+//				count ++;
 				count += temp.posterityCount();
 			}
+			
+			return count;
+		}else{
+			return 1;
 		}
-		return count;
 	}
 }
-- 
1.7.4.1

